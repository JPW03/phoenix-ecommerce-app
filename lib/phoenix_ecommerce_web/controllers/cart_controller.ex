defmodule PhoenixEcommerceWeb.CartController do
  use PhoenixEcommerceWeb, :controller

  alias PhoenixEcommerce.ShoppingCart

  def show(conn, _params) do
    render(conn, :show, changeset: ShoppingCart.change_cart(conn.assigns.cart))
    # assigning the changeset as opposed to the cart itself gives us a structure that
    #  is ready to be modified, rather than being static, and needing to manually create a changeset after
    #  the data has been submitted
    # (wait I'm dumb, the cart is already in the assigns, but the logic still applies)
  end

  # The cart parameter comes from the name of the schema, generated by the changeset
  def update(conn, %{"cart" => cart_params}) do
    case ShoppingCart.update_cart(conn.assigns.cart, cart_params) do
      {:ok, _cart} ->
        redirect(conn, to: ~p"/cart")

      {:error, _changeset} ->
        conn
        |> put_flash(:error, "There was an error updating your cart")
        |> redirect(to: ~p"/cart")
    end
  end
end
